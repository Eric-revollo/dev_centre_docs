[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "Whether to show labels on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabels"
            },
            {
                "description": "Whether to show values on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValues"
            },
            {
                "description": "Whether to show percentage values in labels of the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPercentValues"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link format.",
                "range": "",
                "type": "String",
                "name": "clickURL"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show/hide data labels, data values etc. You can also set chart limits and extended properties. "
    },
    {
        "table": "Chart Titles",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "type": "String",
                "name": "subCaption"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption and sub-caption. "
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "name": "bgImage"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "URL",
                "type": "String",
                "name": "logoURL"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha etc. "
    },
    {
        "table": "Number Formatting",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if `formatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "Character",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add a suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "Character",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "Character",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": "Â ",
                "type": "Number",
                "versionsince": "3.2.2 - SR3",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "Number of decimal places to which all numbers on the chart will be rounded to.",
                "range": "0-10",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers. For example, if you set decimals as 2 and a number is 23.4. If forceDecimals is set to 1, FusionCharts XT will convert the number to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            }
        ],
        "description": "FusionCharts XT offers you a lot of options to format your numbers on the chart. Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers will round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "The data Object",
        "path": "data",
        "attrs": [
            {
                "description": "This attribute determines the label for the data item. The label appears on the x-axis of chart.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Numerical value for the data item. This value will be plotted on the chart.",
                "range": "",
                "type": "Number",
                "name": "value"
            }
        ],
        "description": "In single-series charts, each instance of the `data` object represents a data value to be plotted on the chart. For a single-series chart, one instance of the `data` object looks as shown in the example below:\n\n<pre class=\"language-javascript\"><code>\n\"data\"[{\n\t\t\"label\": \"Jan\",\n\t\t\"value\": \"10000\"\n\t}]\n</code></pre>\n\nAttributes of the `data` object are used to set and configure the data values for the chart."
    },
    {
        "table": "Pie / Doughnut Properties",
        "attrs": [
            {
                "description": "By default, the doughnut chart starts from angle 0 degree i.e., the first doughnut slice starts plotting from 0 degree angle. If you want to change the starting angle of the chart, use this attribute. It obeys the conventions of co-ordinate geometry where 0 degrees means hand of a clock at 3. Starting angle Increases anti-clockwise.",
                "range": "0-360",
                "type": "Number",
                "name": "startingAngle"
            }
        ],
        "description": "This attribute lets you control various functionalities of pie/doughnut chart. "
    },
    
]